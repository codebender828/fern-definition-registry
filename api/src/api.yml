# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

ids:
  - GeneratorTaskId
types:
  ############
  # Artifact #
  ############

  ApiName: ApiName
  ApiVersion: string
  EnvironmentName: string

  ApiArtifact:
    properties:
      name: ApiName
      version: ApiVersion
      createdAt: datetime
      draftInfo: DraftInfo
      releaseInfo: optional<ReleaseInfo>
      deployments: map<EnvironmentName, DeploymentInfo>

  DraftInfo:
    properties:
      taskIds: list<GeneratorTaskId>
      promotion: optional<PromotionInfo>

  PromotionInfo:
    properties:
      promotedAt: datetime
      commit: optional<GithubCommit>

  GithubCommit:
    properties:
      organization: OrganizationName
      repoId: string
      commitHash: string

  ReleaseInfo:
    properties:
      releasedAt: datetime
      taskIds: list<GeneratorTaskId>

  DeploymentInfo:
    properties:
      deployedAt: datetime

  ##############
  # Generation #
  ##############

  OrganizationName: string
  GeneratorName: string
  GeneratorVersion: string

  #####
  # Draft
  #####

  DraftRequest:
    properties:
      organization: OrganizationName
      apiName: ApiName
      generators: list<DraftGeneratorConfig>
      apiDefinition: RawApiDefinition

  DraftResponse:
    properties:
      apiVersion: ApiVersion
      taskIds: list<GeneratorTaskId>

  DraftGeneratorConfig:
    properties:
      generatorName: GeneratorName
      generatorVersion: GeneratorVersion
      customConfig: unknown
      outputLocation: OutputLocation

  OutputLocation:
    enum:
      - REGISTRY
      - LOCAL

  RawApiDefinition:
    properties:
      files: list<File>

  File:
    properties:
      relativePath: string
      contents: string

  #####
  # Promote
  #####

  PromoteRequest:
    properties:
      organization: OrganizationName
      apiName: ApiName
      version: ApiVersion

  #####
  # Release
  #####

  ReleaseRequest:
    properties:
      organization: OrganizationName
      apiName: ApiName
      version: ApiVersion
      generators: list<ReleaseGeneratorConfig>
      apiDefinition: RawApiDefinition

  ReleaseResponse:
    properties:
      taskIds: list<GeneratorTaskId>

  ReleaseGeneratorConfig:
    properties:
      generatorName: GeneratorName
      generatorVersion: GeneratorVersion
      customConfig: unknown
      registry: RegistryConfig

  RegistryConfig:
    union:
      npm: NpmRegistryConfig
      maven: MavenRegistryConfig

  NpmRegistryConfig:
    properties:
      registryUrl: string
      auth: optional<RegistryAuth>
      scope: string

  MavenRegistryConfig:
    properties:
      registryUrl: string
      auth: optional<RegistryAuth>
      group: string

  RegistryAuth:
    properties:
      username: string
      password: string

  #####
  # Versions
  #####

  GetVersionsRequest:
    properties:
      organization: OrganizationName
      apiName: ApiName
      includeDrafts:
        type: optional<boolean>
        docs: Defaults to false

  ApiVersionsPage:
    properties:
      apis: list<ApiArtifact>
      pageToken: optional<integer>

services:
  http:
    DefinitionRegistryService:
      auth: none
      base-path: /registry
      endpoints:
        draft:
          request: DraftRequest
          response: DraftResponse
          errors:
            - OrganizationDoesNotExistError

        promote:
          request: PromoteRequest
          errors:
            - OrganizationDoesNotExistError
            - ApiDoesNotExistError
            - ApiVersionDoesNotExistError
            - ApiVersionIsAlreadyPromotedError

        release:
          request: ReleaseRequest
          response: ReleaseResponse
          errors:
            - OrganizationDoesNotExistError
            - ApiDoesNotExistError
            - ApiVersionDoesNotExistError
            - ApiVersionIsAlreadyReleasedError

        getVersions:
          request: GetVersionsRequest
          response: ApiVersionsPage
          errors:
            - OrganizationDoesNotExistError
            - ApiDoesNotExistError

errors:
  OrganizationDoesNotExistError:
    http:
      statusCode: 404
  ApiDoesNotExistError:
    http:
      statusCode: 404
  ApiVersionDoesNotExistError:
    http:
      statusCode: 404
  ApiVersionIsAlreadyPromotedError:
    http:
      statusCode: 400
  ApiVersionIsAlreadyReleasedError:
    http:
      statusCode: 400
