imports: 
  registry: registry.yml
  commons: commons.yml

service:
  base-path: /org/{orgId}/environments
  path-parameters:
    orgId: commons.OrgId
  auth: true
  endpoints:
    getAll:
      path: ""
      method: GET
      response: GetAllEnvironmentsResponse
      errors: 
        - commons.UserNotInOrgError
    
    create: 
      path: /create
      method: POST
      request: 
        name: CreateEnvironmentRequest
        body: 
          properties: 
            name: string
            url: string
      response: EnvironmentId
      errors: 
        - commons.UserNotInOrgError
    
    delete: 
      path: /{environmentId}
      path-parameters:
        environmentId: EnvironmentId
      method: DELETE
      errors: 
        - EnvironmentDoesNotExistError
        - commons.UserNotInOrgError

types:
  EnvironmentId: uuid

  Environment:
    properties:
      id: EnvironmentId
      name: string
      url: string

  GetAllEnvironmentsResponse:
    properties:
      environments: list<Environment>

errors:
  EnvironmentDoesNotExistError:
    status-code: 404
