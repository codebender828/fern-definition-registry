imports:
  registry: registry.yml
  commons: commons.yml

service:
  base-path: /org/{orgId}/environments
  path-parameters:
    orgId: commons.OrgId
  auth: true
  endpoints:
    getAll:
      path: ""
      method: GET
      response: GetAllEnvironmentsResponse
      errors:
        - commons.UserNotInOrgError

    create:
      path: /create
      method: POST
      request:
        name: CreateEnvironmentRequest
        body:
          properties:
            id: EnvironmentId
      errors:
        - commons.UserNotInOrgError
        - EnvironmentIdAlreadyExistsError

    delete:
      path: /{environmentId}
      path-parameters:
        environmentId: EnvironmentId
      method: DELETE
      errors:
        - EnvironmentDoesNotExistError
        - commons.UserNotInOrgError

types:
  EnvironmentId: uuid

  Environment:
    properties:
      id: EnvironmentId

  GetAllEnvironmentsResponse:
    properties:
      environments: list<Environment>

errors:
  EnvironmentDoesNotExistError:
    status-code: 404
  EnvironmentIdAlreadyExistsError:
    status-code: 404
