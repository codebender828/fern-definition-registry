# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  rootCommons: ../../../commons.yml

service:
  base-path: /registry/docs
  auth: false
  audiences:
    - write
  endpoints:
    startDocsRegister:
      auth: true
      method: POST
      path: /init
      request:
        name: StartDocsRegisterRequest
        body:
          properties:
            domain: string
            orgId: rootCommons.OrgId
            filepaths:
              type: list<FilePath>
              docs: Relative filepath from docs folder.
      response: StartDocsRegisterResponse

    finishDocsRegister:
      auth: true
      method: POST
      path: /register/{docsRegistrationId}
      path-parameters:
        docsRegistrationId: DocsRegistrationId
      request:
        name: RegisterDocsRequest
        body:
          properties:
            docsDefinition: DocsDefinition
      errors:
        - rootCommons.UnauthorizedError
        - rootCommons.UserNotInOrgError
        - DocsRegistrationIdNotFound

types:
  FilePath:
    type: string
    docs: Each string is a unique key for the file. You can use the filepath as a key.

  DocsRegistrationId: string

  StartDocsRegisterResponse:
    properties:
      docsRegistrationId: DocsRegistrationId
      uploadUrls: map<FilePath, FileS3UploadUrl>

  FileS3UploadUrl:
    properties:
      uploadUrl: string
      fileId:
        type: FileId
        docs: |
          When reading docs we will return a map<FileId, URL> that you can use to look up the docs.

  FileId: string

  PageId: string

  DocsDefinition:
    properties:
      pages: map<PageId, PageContent>
      config: DocsConfig

  PageContent:
    properties:
      markdown: string # eventually PageContent should just be a FileId ?

  DocsConfig:
    properties:
      navigation: NavigationConfig
      logo: optional<FileId>
      colors: optional<ColorsConfig>

  NavigationConfig:
    properties:
      items: list<NavigationItem>

  NavigationItem:
    union:
      page: PageMetadata
      api: ApiSection
      section: DocsSection

  PageMetadata:
    properties:
      title: string
      id: PageId

  ApiSection:
    properties:
      title: string
      api: rootCommons.ApiDefinitionId

  DocsSection:
    properties:
      title: string
      items: list<NavigationItem>

  ColorsConfig:
    properties:
      accentPrimary: optional<RgbColor>

  RgbColor:
    properties:
      r: integer
      g: integer
      b: integer

errors:
  DocsRegistrationIdNotFound:
    status-code: 404
