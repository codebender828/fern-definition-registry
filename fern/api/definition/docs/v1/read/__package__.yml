# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  rootCommons: ../../../commons.yml
  apiReadV1: ../../../api/v1/read/__package__.yml
  apiReadV1Endpoint: ../../../api/v1/read/endpoint.yml

service:
  base-path: /registry/docs
  auth: false
  audiences:
    - read
  endpoints:
    getDocsForDomainLegacy:
      method: GET
      path: /load/{domain}
      path-parameters:
        domain: string
      response: DocsDefinition
      errors:
        - DomainNotRegisteredError
    getDocsForDomain:
      method: POST
      path: /load
      request:
        name: LoadDocsForDomainRequest
        body:
          properties:
            domain: string
      response: DocsDefinition
      errors:
        - DomainNotRegisteredError

types:
  PageId: string

  Url: string

  FileId: string

  DocsDefinition:
    properties:
      pages: map<PageId, PageContent>
      apis: map<rootCommons.ApiDefinitionId, apiReadV1.ApiDefinition>
      files: map<FileId, Url>
      config: DocsConfig

  PageContent:
    properties:
      markdown: string # eventually PageContent should just be a FileId ?

  DocsConfig:
    properties:
      navigation: NavigationConfig
      logo: optional<FileId>
      colors: optional<ColorsConfig>
      navbarLinks: list<NavbarLink>

  NavigationConfig:
    properties:
      items: list<NavigationItem>

  NavigationItem:
    union:
      page: PageMetadata
      api: ApiSection
      section: DocsSection

  PageMetadata:
    properties:
      id: PageId
      title: string
      urlSlug: string
  
  NavbarLink: 
    properties: 
      text: string
      url: string
      style: NavbarLinkStyle
      linkType: LinkType
  
  LinkType:
    union: 
      github: {}
      discord: {}
      twitter: {}
      generic: {}
  
  NavbarLinkStyle: 
    enum: 
      - PRIMARY
      - DEFAULT

  ApiSection:
    properties:
      title: string
      api: rootCommons.ApiDefinitionId
      urlSlug: string
      artifacts: optional<ApiArtifacts>

  DocsSection:
    properties:
      title: string
      items: list<NavigationItem>
      urlSlug: string

  ColorsConfig:
    properties:
      accentPrimary: optional<RgbColor>

  RgbColor:
    properties:
      r: integer
      g: integer
      b: integer

  ApiArtifacts:
    properties:
      sdks: list<PublishedSdk>
      postman: optional<PublishedPostmanCollection>
  
  PublishedPostmanCollection: 
    properties: 
      url: string
      githubRepo: optional<GitHubRepo>

  PublishedSdk:
    union:
      npm: NpmPackage
      maven: MavenPackage
      pypi: PypiPackage

  NpmPackage:
    properties:
      packageName: string
      githubRepo: GitHubRepo
      version: string

  MavenPackage:
    properties:
      coordinate: string
      githubRepo: GitHubRepo
      version: string

  PypiPackage:
    properties:
      packageName: string
      githubRepo: GitHubRepo
      version: string

  GitHubRepo:
    properties:
      name: string
      url: string

errors:
  DomainNotRegisteredError:
    status-code: 404
