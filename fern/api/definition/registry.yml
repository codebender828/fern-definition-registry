# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  endpoint: endpoint.yml
  type: type.yml
  environment: environment.yml
  commons: commons.yml

service:
  base-path: /orgs/{organizationId}/apis
  auth: true
  path-parameters:
    organizationId: commons.OrganizationId
  endpoints:
    getAllApiMetadata:
      method: GET
      path: /metadata
      response: GetAllApisResponse

    getApiMetadata:
      method: GET
      path: /{apiId}/metadata
      path-parameters:
        apiId: ApiId
      response: ApiMetadata
      errors:
        - commons.ApiDoesNotExistError

    getApiDefinitionForEnvironment:
      method: GET
      docs: Loads an API that has configured environments
      path: /{apiId}/{environment}/definition
      path-parameters:
        apiId: ApiId
        environment: environment.EnvironmentId
      response: ApiDefinition
      errors:
        - commons.ApiDoesNotExistError
        - environment.EnvironmentDoesNotExistError

    getLatestApiDefinition:
      method: GET
      path: /{apiId}/definition
      path-parameters:
        apiId: ApiId
      response: ApiDefinition
      errors:
        - commons.ApiDoesNotExistError

    registerApi:
      method: POST
      path: /{apiId}/register
      path-parameters:
        apiId: ApiId
      request:
        name: RegisterApiRequest
        body:
          properties:
            apiDefinition: ApiDefinition
            environmentId:
              type: optional<environment.EnvironmentId>
              docs: |
                If the API has environments, then you must provide an environment id.
      errors:
        - environment.EnvironmentDoesNotExistError

    updateApiMetadata:
      method: POST
      path: /{apiId}/update-metadata
      path-parameters:
        apiId: ApiId
      request:
        name: UpdateApiMetadataRequest
        body:
          properties:
            name: string
            description: optional<string>
            git_repo: optional<GitRepo>
            image: optional<ApiImage>
      errors:
        - commons.ApiDoesNotExistError

    getLogoUploadS3Url:
      method: GET
      path: /{apiId}/upload-logo-url
      path-parameters:
        apiId: ApiId
      response: GetLogoUploadS3UrlResponse

types:
  ApiId:
    type: string
    docs: This should be the API Name in the fern definition.

  ApiDefinition:
    properties:
      rootPackage: ApiDefinitionPackage
      types: map<type.TypeId, type.TypeDefinition>
      subpackages: map<SubpackageId, ApiDefinitionSubpackage>

  ApiDefinitionPackage:
    properties:
      endpoints: list<endpoint.EndpointDefinition>
      types: list<type.TypeId>
      subpackages: list<SubpackageId>

  ApiDefinitionSubpackage:
    extends: ApiDefinitionPackage
    properties:
      name: string

  SubpackageId: string

  GetAllApisResponse:
    properties:
      apis: list<ApiMetadata>

  ApiMetadata:
    properties:
      id: ApiId
      name: string
      description: optional<string>
      image: optional<ApiImage>
      git_repo: optional<GitRepo>
      environments: map<environment.EnvironmentId, commons.DeploymentInfo>

  GitRepo:
    union:
      github: string
      gitlab: string
      bitbucket: string

  GetLogoUploadS3UrlResponse:
    properties:
      s3UploadUrl: string

  ApiImage:
    union:
      emoji: string
      url: string
      #TODO: support S3
